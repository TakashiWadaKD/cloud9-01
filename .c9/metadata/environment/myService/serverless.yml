{"filter":false,"title":"serverless.yml","tooltip":"/myService/serverless.yml","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":113,"column":0},"action":"remove","lines":["# Welcome to Serverless!","#","# This file is the main config file for your service.","# It's very minimal at this point and uses default values.","# You can always add more config options for more control.","# We've included some commented out config examples here.","# Just uncomment any of them to get that config option.","#","# For full config options, check the docs:","#    docs.serverless.com","#","# Happy Coding!","","service: myservice","# app and org for use with dashboard.serverless.com","#app: your-app-name","#org: your-org-name","","# You can pin your service to only deploy with a specific Serverless version","# Check out our docs for more details","# frameworkVersion: \"=X.X.X\"","","provider:","  name: aws","  runtime: nodejs12.x","","# you can overwrite defaults here","#  stage: dev","#  region: us-east-1","","# you can add statements to the Lambda function's IAM Role here","#  iamRoleStatements:","#    - Effect: \"Allow\"","#      Action:","#        - \"s3:ListBucket\"","#      Resource: { \"Fn::Join\" : [\"\", [\"arn:aws:s3:::\", { \"Ref\" : \"ServerlessDeploymentBucket\" } ] ]  }","#    - Effect: \"Allow\"","#      Action:","#        - \"s3:PutObject\"","#      Resource:","#        Fn::Join:","#          - \"\"","#          - - \"arn:aws:s3:::\"","#            - \"Ref\" : \"ServerlessDeploymentBucket\"","#            - \"/*\"","","# you can define service wide environment variables here","#  environment:","#    variable1: value1","","# you can add packaging information here","#package:","#  include:","#    - include-me.js","#    - include-me-dir/**","#  exclude:","#    - exclude-me.js","#    - exclude-me-dir/**","","functions:","  hello:","    handler: handler.hello","#    The following are a few example events you can configure","#    NOTE: Please make sure to change your handler code to work with those events","#    Check the event documentation for details","#    events:","#      - http:","#          path: users/create","#          method: get","#      - websocket: $connect","#      - s3: ${env:BUCKET}","#      - schedule: rate(10 minutes)","#      - sns: greeter-topic","#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000","#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx","#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx","#      - iot:","#          sql: \"SELECT * FROM 'some_topic'\"","#      - cloudwatchEvent:","#          event:","#            source:","#              - \"aws.ec2\"","#            detail-type:","#              - \"EC2 Instance State-change Notification\"","#            detail:","#              state:","#                - pending","#      - cloudwatchLog: '/aws/lambda/hello'","#      - cognitoUserPool:","#          pool: MyUserPool","#          trigger: PreSignUp","#      - alb:","#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/","#          priority: 1","#          conditions:","#            host: example.com","#            path: /hello","","#    Define function environment variables here","#    environment:","#      variable2: value2","","# you can add CloudFormation resource templates here","#resources:","#  Resources:","#    NewResource:","#      Type: AWS::S3::Bucket","#      Properties:","#        BucketName: my-new-bucket","#  Outputs:","#     NewOutput:","#       Description: \"Description for the output\"","#       Value: \"Some output value\"",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":73,"column":27},"action":"insert","lines":["service: serverless-crud","","provider:","  name: aws","  runtime: nodejs4.3","  region: us-east-1","  stage: dev","  iamRoleStatements:","    - Effect: Allow","      Action:","        - dynamodb:DescribeTable","        - dynamodb:Query","        - dynamodb:Scan","        - dynamodb:GetItem","        - dynamodb:PutItem","        - dynamodb:UpdateItem","        - dynamodb:DeleteItem","      Resource: \"arn:aws:dynamodb:us-east-1:*:*\"","","functions:","  create:","    handler: handler.create","    events:","      - http:","          path: todos","          method: post","          cors: true","  readAll:","    handler: handler.readAll","    events:","      - http:","          path: todos","          method: get","          cors: true","  readOne:","    handler: handler.readOne","    events:","      - http:","          path: todos/{id}","          method: get","          cors: true","  update:","    handler: handler.update","    events:","      - http:","          path: todos/{id}","          method: put","          cors: true","  delete:","    handler: handler.delete","    events:","      - http:","          path: todos/{id}","          method: delete","          cors: true","","resources:","  Resources:","    TodosDynamoDbTable:","      Type: 'AWS::DynamoDB::Table'","      DeletionPolicy: Retain","      Properties:","        AttributeDefinitions:","          -","            AttributeName: id","            AttributeType: S","        KeySchema:","          -","            AttributeName: id","            KeyType: HASH","        ProvisionedThroughput:","          ReadCapacityUnits: 1","          WriteCapacityUnits: 1","        TableName: 'todos' "]}],[{"start":{"row":4,"column":17},"end":{"row":4,"column":20},"action":"remove","lines":["4.3"],"id":3},{"start":{"row":4,"column":17},"end":{"row":4,"column":18},"action":"insert","lines":["1"]},{"start":{"row":4,"column":18},"end":{"row":4,"column":19},"action":"insert","lines":["2"]},{"start":{"row":4,"column":19},"end":{"row":4,"column":20},"action":"insert","lines":["."]},{"start":{"row":4,"column":20},"end":{"row":4,"column":21},"action":"insert","lines":["x"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":12,"column":23},"end":{"row":12,"column":23},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1591861622434,"hash":"8e76ab733b770b1a63e34f915eda4c63723ae9a6"}